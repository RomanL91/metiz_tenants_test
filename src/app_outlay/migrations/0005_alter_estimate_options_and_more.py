# Generated by Django 5.2.6 on 2025-10-06 08:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app_estimate_imports", "0002_parsemarkup"),
        ("app_outlay", "0004_enable_pg_trgm"),
        ("app_technical_cards", "0003_alter_technicalcard_options_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="estimate",
            options={"verbose_name": "Смета", "verbose_name_plural": "Сметы"},
        ),
        migrations.AddField(
            model_name="grouptechnicalcardlink",
            name="source_row_index",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Номер строки в исходном Excel файле (для трассировки сопоставлений).",
                null=True,
                verbose_name="Индекс строки в источнике",
            ),
        ),
        migrations.AlterField(
            model_name="estimate",
            name="currency",
            field=models.CharField(
                blank=True,
                default="RUB",
                help_text="Буквенный код валюты (ISO 4217), например: RUB, KZT, USD.",
                max_length=8,
                verbose_name="Валюта сметы",
            ),
        ),
        migrations.AlterField(
            model_name="estimate",
            name="name",
            field=models.CharField(
                db_index=True,
                help_text="Короткое наименование сметы (как будет отображаться в списках и заголовках).",
                max_length=255,
                verbose_name="Название сметы",
            ),
        ),
        migrations.AlterField(
            model_name="estimate",
            name="source_file",
            field=models.ForeignKey(
                blank=True,
                help_text="От какого импортированного файла построена смета (для превью/трассировки).",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="derived_estimates",
                to="app_estimate_imports.importedestimatefile",
                verbose_name="Источник (импортированный файл)",
            ),
        ),
        migrations.AlterField(
            model_name="estimate",
            name="source_sheet_index",
            field=models.PositiveIntegerField(
                blank=True,
                default=0,
                help_text="Номер листа Excel, по которому строилось превью (0 — первый лист).",
                null=True,
                verbose_name="Индекс листа Excel",
            ),
        ),
        migrations.AlterField(
            model_name="group",
            name="estimate",
            field=models.ForeignKey(
                help_text="К какой смете относится данная группа/раздел.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="groups",
                to="app_outlay.estimate",
                verbose_name="Смета",
            ),
        ),
        migrations.AlterField(
            model_name="group",
            name="name",
            field=models.CharField(
                help_text="Отображаемое название раздела/группы в смете.",
                max_length=255,
                verbose_name="Название группы",
            ),
        ),
        migrations.AlterField(
            model_name="group",
            name="order",
            field=models.PositiveIntegerField(
                db_index=True,
                default=0,
                help_text="Порядок сортировки групп внутри одной сметы/родителя (меньше — выше).",
                verbose_name="Порядок",
            ),
        ),
        migrations.AlterField(
            model_name="group",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="Если указано — группа будет вложенной (дочерней) относительно родительской.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="app_outlay.group",
                verbose_name="Родительская группа",
            ),
        ),
        migrations.AlterField(
            model_name="grouptechnicalcardlink",
            name="group",
            field=models.ForeignKey(
                help_text="Раздел/группа сметы, к которой привязывается версия технической карты.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="techcard_links",
                to="app_outlay.group",
                verbose_name="Группа сметы",
            ),
        ),
        migrations.AlterField(
            model_name="grouptechnicalcardlink",
            name="order",
            field=models.PositiveIntegerField(
                db_index=True,
                default=0,
                help_text="Порядок сортировки ТК внутри группы (меньше — выше).",
                verbose_name="Порядок",
            ),
        ),
        migrations.AlterField(
            model_name="grouptechnicalcardlink",
            name="pinned_at",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Когда именно версия ТК была зафиксирована (связь добавлена в смету).",
                verbose_name="Дата фиксации версии",
            ),
        ),
        migrations.AlterField(
            model_name="grouptechnicalcardlink",
            name="quantity",
            field=models.DecimalField(
                decimal_places=3,
                default=1,
                help_text="Сколько единиц выпуска ТК требуется по смете (в единицах output_unit версии ТК).",
                max_digits=16,
                verbose_name="Количество выпуска",
            ),
        ),
        migrations.AlterField(
            model_name="grouptechnicalcardlink",
            name="technical_card_version",
            field=models.ForeignKey(
                help_text="Зафиксированная версия ТК, используемая в расчётах сметы.",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="group_links",
                to="app_technical_cards.technicalcardversion",
                verbose_name="Версия технической карты",
            ),
        ),
    ]
